# /etc/nginx/nginx.conf

# 加载 stream 模块
load_module /usr/lib/nginx/modules/ngx_stream_module.so;
load_module /usr/lib/nginx/modules/ngx_stream_ssl_module.so;
load_module /usr/lib/nginx/modules/ngx_stream_ssl_preread_module.so;

# 全局设置
user www-data;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# 事件模块
events {
    worker_connections 1024;
}

# stream 块，用于 TCP/UDP 代理转发
stream {
    # 根据客户端 TLS 握手中的 SNI 域名选择后端
    map $ssl_preread_server_name $upstream {
        lixiaojun.io 127.0.0.1:30443; # Istio IngressGateway HTTPS
        # 可以添加更多域名
        # api.lixiaojun.io 127.0.0.1:30443;
        # 默认转发到 Istio
        default 127.0.0.1:30443;
    }

    server {
        listen 443 ssl;
        proxy_pass $upstream;
        ssl_preread on;

        # 访问日志
        access_log /var/log/nginx/stream-access.log;
        error_log /var/log/nginx/stream-error.log warn;
    }
}

# HTTP 模块
http {
    # 用于 WebSocket 等升级协议的连接管理
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # 基础配置
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # lixiaojun.io 主域名 - 直接转发到 Istio，让 Istio 处理重定向
    server {
        listen 80;
        server_name lixiaojun.io;

        location / {
            proxy_pass http://127.0.0.1:30080; # 转发到 Istio HTTP 端口
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
    }

    # 其他未匹配域名
    server {
        listen 80 default_server;
        server_name _;

        location / {
            proxy_pass http://127.0.0.1:30080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
    }
}